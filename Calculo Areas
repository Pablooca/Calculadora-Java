package Calculo

public class Areas {
  
  public double cuadrado (double lado) {
    return Math.pow (lado, 2);
  }
  
  public double rectangulo (double base, double altura) {
    return base * altura;
  }
  
  public double rombo (double diagonal_mayor, double diagonal_menor){
    return diagonal_mayor * diagonal_menor;
  }
  
  public double romboide (double base, double altura) {
    return base * altura;
  }
  
  public double trapecio (double base_mayor, double base_menor, double altura) {
    return ((base_mayor + base_menor) * altura) / 2;
  }
  
  public double triangulo (double base, double altura){
    return (base * altura) / 2;
  }
  
  public double poligono_regular (double perimetro, double apotema){
    return (perimetro * apotema) / 2;
  }
  
  public double circulo (double radio) {
    return Math.PI * Math.pow (radio, 2);
  }
  
  public double corona_circular (double radio_mayor, double radio_menor) {
    return Math.PI * (Math.pow (radio_mayor, 2) - Math.pow (radio_menor, 2));
  }
  
  public double cubo (double lado) {
    return 6 * Math.pow (lado, 2);
  }
  
  public double cilindro (double radio, double altura){
    return 2 * Math.PI * radio * (altura + radio);
  }
  
  public double ortoedro (double a, double b, double c){
    return 2 * (a * b + a * c + b * c);
  }
  
  public double prisma_recto (double perimetro, double lado, double altura){
    return perimetro * (altura + lado);
  }
  
  public double cono (double radio, double generatriz){
    return Math.PI * radio * (radio + generatriz);
  }
  
  public double esfera (double radio) {
    return Math.PI * 4 * Math.pow (radio, 2);
  }
  
  public double tetraedro_regular (double lado) {
    return Math.sqrt(3) * Math.pow (lado, 2);
  }
  
  public double octaedro_regular (double lado){
    return 2 * Math.sqrt (3) * Math.pow (lado, 2);
  }
  
  public double casquete_esferico (double radio, double altura){
    return 2 * Math.PI * radio * altura;
  }
  
  public double segmento_esferico (double radio, double altura){
    return 2 * Math.PI * radio * altura;
  }
  
}
